CSS在WebKit和Blink下的区域绘制
发表于 2013年10月28日 由安德烈?布库尔
CSS 2.1规范定义了一个盒模型用来显示文档里面的内容。WebKit和Blink引擎遵守本规范并且予以实现，那么，假设当显示一个文档布局时布局的元素作为一个单独的盒子，，在混合添加碎片时，你可能最终为一个单一的元素使用了多个盒子。这意味着，引擎必须做一些技巧来正确渲染盒子片段。大多数碎片实现方面都覆盖在我以前的博客WebKit的CSS中的碎片里。在这篇文章中，我想专注于CSS的区域绘制是如何实现的。
 
图1
让我们考虑一个文档，定义一个指定的流（一个RenderFlowThread对象）包含一个流过3个指定宽高的区域的大段落。第一步中，布局中只有body元素的内容，忽略指定流中的元素。此步中，将计算页面中这个区域（RenderRegion对象）的大小和位置。在第二步中，引擎勾画出流线程的内容。正如你可以看到的，各地区有不同的宽度，这将影响线框的大小。在图1中，可以看到布局后的流线程草图。段落的每一个片段是不同的颜色，以反映该区域将被定位的地方。规范地说，流线的宽度是最宽的区域的宽度（在我们的案例中，是区域三）。通过利用存储在RenderBoxRegionInfo类型对象的信息，每个区域内容块的宽度决定了线框的宽度。他们包含需要调整的每一个区域块的宽度值。剩余的上一个区域的最后一行到下一个区域的第一行之间的空白是分页支柱（在图1中灰色箭头表示的），内容的偏移是为了模拟自然断点。因为流线程的高度是所有区域高度的总和，如果内容太多，包括所有区域的内容将会溢出流线程（见流线程的底部）。
